from aiogram import Router
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, Message, CallbackQuery

from memory_storage import SurveyState

router = Router()

_EXPERIENCE_KEYBOARD = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="üî∞ Junior", callback_data="Junior"),
            InlineKeyboardButton(text="üîß Middle", callback_data="Middle"),
            InlineKeyboardButton(text="üß† Senior", callback_data="Senior"),
        ]
    ]
)


_TECHNOLOGY_KEYBOARD = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="üêç FastAPI", callback_data="FastAPI"),
            InlineKeyboardButton(text="üóÉ SQLAlchemy", callback_data="SQLAlchemy"),
            InlineKeyboardButton(text="üì¶ Redis", callback_data="Redis"),
        ]
    ]
)



@router.message(Command(commands=["survey"]))
async def cmd_survey(message: Message, state: FSMContext) -> None:
    await message.answer("–í—ã–±–µ—Ä–∏ —Å–≤–æ–π –æ–ø—ã—Ç –≤ Python:", reply_markup=_EXPERIENCE_KEYBOARD)
    await state.set_state(SurveyState.experience)


@router.callback_query(StateFilter(SurveyState.experience))
async def handle_experience(callback: CallbackQuery, state: FSMContext):
    data = callback.data

    await state.update_data(experience=data)

    await callback.message.answer("–í—ã–±–µ—Ä–∏ –ª—é–±–∏–º—É—é —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—é:", reply_markup=_TECHNOLOGY_KEYBOARD)
    await state.set_state(SurveyState.technology)


@router.callback_query(StateFilter(SurveyState.technology))
async def handle_technology(callback: CallbackQuery, state: FSMContext):
    data = callback.data
    await state.update_data(technology=data)
    user_data = await state.get_data()

    await callback.message.answer(f"–°–ø–∞—Å–∏–±–æ! –í—ã: {user_data['experience']}, –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ: {user_data['technology']}")
    await state.clear()